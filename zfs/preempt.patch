*** zfs-0.6.0-rc9/config/kernel.m4	Mon Jun 18 00:21:59 2012
--- zfs-0.6.0-rc9/config/kernel.new	Mon Jun 18 00:22:06 2012
***************
*** 4,10 ****
  AC_DEFUN([ZFS_AC_CONFIG_KERNEL], [
  	ZFS_AC_KERNEL
  	ZFS_AC_SPL
- 	ZFS_AC_KERNEL_CONFIG
  	ZFS_AC_KERNEL_BDEV_BLOCK_DEVICE_OPERATIONS
  	ZFS_AC_KERNEL_TYPE_FMODE_T
  	ZFS_AC_KERNEL_KOBJ_NAME_LEN
--- 4,9 ----
***************
*** 308,389 ****
  ])
  
  dnl #
- dnl # Certain kernel build options are not supported.  These must be
- dnl # detected at configure time and cause a build failure.  Otherwise
- dnl # modules may be successfully built that behave incorrectly.
- dnl #
- AC_DEFUN([ZFS_AC_KERNEL_CONFIG], [
- 
- 	AS_IF([test "$ZFS_META_LICENSE" = GPL], [
- 		AC_DEFINE([HAVE_GPL_ONLY_SYMBOLS], [1],
- 			[Define to 1 if licensed under the GPL])
- 	])
- 
- 	ZFS_AC_KERNEL_CONFIG_PREEMPT
- 	ZFS_AC_KERNEL_CONFIG_DEBUG_LOCK_ALLOC
- ])
- 
- dnl #
- dnl # Check CONFIG_PREEMPT
- dnl #
- dnl # Premptible kernels will be supported in the future.  But at the
- dnl # moment there are a few places in the code which need to be updated
- dnl # to accomidate them.  Until that work occurs we should detect this
- dnl # at configure time and fail with a sensible message.  Otherwise,
- dnl # people will be able to build successfully, however they will have
- dnl # stability problems.  See https://github.com/zfsonlinux/zfs/issues/83
- dnl #
- AC_DEFUN([ZFS_AC_KERNEL_CONFIG_PREEMPT], [
- 
- 	ZFS_LINUX_CONFIG([PREEMPT],
- 		AC_MSG_ERROR([
- 	*** Kernel built with CONFIG_PREEMPT which is not supported.
- 	*** You must rebuild your kernel without this option.]), [])
- ])
- 
- dnl #
- dnl # Check CONFIG_DEBUG_LOCK_ALLOC
- dnl #
- dnl # This is typically only set for debug kernels because it comes with
- dnl # a performance penalty.  However, when it is set it maps the non-GPL
- dnl # symbol mutex_lock() to the GPL-only mutex_lock_nested() symbol.
- dnl # This will cause a failure at link time which we'd rather know about
- dnl # at compile time.
- dnl #
- dnl # Since we plan to pursue making mutex_lock_nested() a non-GPL symbol
- dnl # with the upstream community we add a check to detect this case.
- dnl #
- AC_DEFUN([ZFS_AC_KERNEL_CONFIG_DEBUG_LOCK_ALLOC], [
- 
- 	ZFS_LINUX_CONFIG([DEBUG_LOCK_ALLOC], [
- 		AC_MSG_CHECKING([whether mutex_lock() is GPL-only])
- 		tmp_flags="$EXTRA_KCFLAGS"
- 		ZFS_LINUX_TRY_COMPILE([
- 			#include <linux/module.h>
- 			#include <linux/mutex.h>
- 
- 			MODULE_LICENSE("$ZFS_META_LICENSE");
- 		],[
- 			struct mutex lock;
- 
- 			mutex_init(&lock);
- 			mutex_lock(&lock);
- 			mutex_unlock(&lock);
- 		],[
- 			AC_MSG_RESULT(no)
- 		],[
- 			AC_MSG_RESULT(yes)
- 			AC_MSG_ERROR([
- 	*** Kernel built with CONFIG_DEBUG_LOCK_ALLOC which is incompatible
- 	*** with the CDDL license and will prevent the module linking stage
- 	*** from succeeding.  You must rebuild your kernel without this
- 	*** option enabled.])
- 		])
- 		EXTRA_KCFLAGS="$tmp_flags"
- 	], [])
- ])
- 
- dnl #
  dnl # ZFS_LINUX_CONFTEST
  dnl #
  AC_DEFUN([ZFS_LINUX_CONFTEST], [
--- 307,312 ----
